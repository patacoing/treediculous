on:
  push:
    tags:
      - "api-*"

env:
  AZURE_RESOURCE_GROUP: "treediculous-grp"
  AZURE_WORKSPACE: "treediculous-ml-grp"
  AZURE_LOCATION: "northeurope"
  PYTHON_VERSION: "3.10.15"
  DOCKER_REGISTRY: "ghcr.io"

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  build-push-api-docker-image:
    runs-on: ubuntu-latest
    environment: treediculous
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          token: ${{ secrets.GIT_TOKEN }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        working-directory: pipeline
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

      - name: azure login
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Install Azure CLI ML extension
        run: az extension add --name ml

      - name: Download latest model
        working-directory: pipeline
        env:
          DOWNLOAD_PATH: "../api/app"
        run: ./run_download_model.sh latest ${{ env.AZURE_RESOURCE_GROUP }} ${{ env.AZURE_WORKSPACE }} ${{ env.AZURE_LOCATION }} ${{ secrets.AZURE_SUBSCRIPTION_ID }} ${{ env.DOWNLOAD_PATH }}

      - name: Push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: api/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/patacoing/treediculous:${{ github.ref_name }}

  get-web-version:
    runs-on: ubuntu-latest
    environment: treediculous
    outputs:
      web-version: ${{ steps.get-web-version.outputs.web-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_TOKEN }}

      - name: Get web version
        id: get-web-version
        run: echo "web-version=$(git describe --tags --match='web-*' HEAD --abbrev=0)" >> $GITHUB_OUTPUT

  deploy-api:
    uses: ./.github/workflows/deployment.yml
    needs:
      - build-push-api-docker-image
      - get-web-version
    with:
      api-version: ${{ github.ref_name }}
      web-version: ${{ needs.get-web-version.outputs.web-version }}
      working-directory: deployment
      deploy-api: true
    secrets: inherit